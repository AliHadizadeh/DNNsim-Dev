
<transform {
	network: <Network name>
	inputType: <Caffe|Protobuf|Gzip>
	inputDataType: <Float32|Fixed16>
	outputType: <Protobuf|Gzip>
	outputDataType: <Float32|Fixed16>
	[activate_bias_and_out_act: true]
}>

<simulate {
	network: <Network name>
	inputType: <Caffe|Protobuf|Gzip>
	inputDataType: <Float32|Fixed16>
	[activate_bias_and_out_act: true]
	<experiment {
		architecture: <None|BitPragmatic|Stripes|Laconic|BitTacticalP|BitTacticalE|SCNN|SCNNp|SCNNe>
		task: <Inference|Cycles|Potentials|Schedule> //Schedule only for BitTactical, Inference only for None
		[n_columns: <pos_num>] //Default 16
		[n_rows: <pos_num>] //Default 16 (LAC 8)
		[column_registers: <pos_num>] //Default 0
		[precision_granularity: <Tile|SIP>] //Only for Dynamic Stripes and BitTacticalP: Default Tile
		[bits_first_stage: <pos_num>] //Only for BitPragmatic and BitTacticalE: Default 0
		[lookahead_d: <pos_num>] //Only for BitTactical: Default 5
		[lookaside_h: <pos_num>] //Only for BitTactical: Default 2
		[search_shape: <L|T>] //Only for BitTactical: Default L
		[read_schedule_from_proto: true] //Only for BitTactical: Default false
		//SCNN-like architectures
		[Ht: <pos_num>] //Default 8
		[Wt: <pos_num>] //Default 8
		[Kt: <pos_num>] //Default 64
		[I: <pos_num>] //Default 4
		[F: <pos_num>] //Default 4
		[out_acc_size: <pos_num>] //Default 1024
	}>
}>
