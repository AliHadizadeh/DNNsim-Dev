
syntax = "proto3";

package protobuf;

message Batch {

    message Simulate {

        message Experiment {
            string architecture = 1;
            string task = 2;
            string dataflow = 3;

            // For grid accelerators
            uint32 lanes = 4;
            uint32 columns = 5;
            uint32 rows = 6;
            uint32 tiles = 7;
            uint32 column_registers = 8;
            uint32 pe_width = 9;

            // For Pragmatic-Laconic
            bool booth_encoding = 10;
            uint32 bits_first_stage = 11;

            // For ShapeShifter-Loom
            uint32 group_size = 12;
            bool minor_bit = 13;

            // For Loom
            bool dynamic_weights = 14;
            uint32 pe_serial_bits = 15;

            // For Tactical
            uint32 lookahead_h = 16;
            uint32 lookaside_d = 17;
            string search_shape = 18;

            // SCNN
            uint32 Wt = 19;
            uint32 Ht = 20;
            uint32 I = 21;
            uint32 F = 22;
            uint32 out_acc_size = 23;
            uint32 banks = 24;

            // On top architectures
            bool diffy = 25;
            bool tactical = 26;

            // Core parameters
            string cpu_clock_freq = 27;

            // Memory parameters
            string dram_size = 28;
            uint32 dram_width = 29;
            uint64 dram_start_act_address = 30;
            uint64 dram_start_wgt_address = 31;
            string dram_conf = 32;

            uint32 gbuffer_act_levels = 33;
            uint32 gbuffer_wgt_levels = 34;
            repeated string gbuffer_act_size = 35;
            repeated string gbuffer_wgt_size = 36;
            uint32 gbuffer_act_banks = 37;
            uint32 gbuffer_wgt_banks = 38;
            uint32 gbuffer_act_bank_width = 39;
            uint32 gbuffer_wgt_bank_width = 40;
            repeated uint32 gbuffer_act_read_delay = 41;
            repeated uint32 gbuffer_act_write_delay = 42;
            repeated uint32 gbuffer_wgt_read_delay = 43;

            uint32 abuffer_rows = 44;
            uint32 abuffer_read_delay = 45;

            uint32 pbuffer_rows = 46;
            uint32 pbuffer_read_delay = 47;

            uint32 wbuffer_rows = 48;
            uint32 wbuffer_read_delay = 49;

            uint32 obuffer_rows = 50;
            uint32 obuffer_write_delay = 51;

            // Other modules
            uint32 composer_inputs = 52;
            uint32 composer_delay = 53;
            uint32 ppu_inputs = 54;
            uint32 ppu_delay = 55;

        }

        uint32 batch = 1;
        string model = 2;
        string data_type = 3;
        string network = 4;
        uint32 data_width = 5;
        bool quantised = 6;
        repeated Experiment experiment = 7;
    }

    repeated Simulate simulate = 1;

}
